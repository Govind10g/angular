{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee/employee.component.css","webpack:///./src/app/employee/employee.component.html","webpack:///./src/app/employee/employee.component.ts","webpack:///./src/app/employee1/employee1.component.css","webpack:///./src/app/employee1/employee1.component.html","webpack:///./src/app/employee1/employee1.component.ts","webpack:///./src/app/graphql.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/person/person.component.css","webpack:///./src/app/person/person.component.html","webpack:///./src/app/person/person.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PersonComponent } from './person/person.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { Employee1Component } from './employee1/employee1.component';\nimport { LoginComponent } from './login/login.component';\n//import { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n   {\n    path: 'person',\n    component: PersonComponent \n  },\n  {\n    path: '',\n    component: PersonComponent \n  },\n  {\n    path: 'employee2',\n    component: EmployeeComponent \n  },\n  {\n    path: 'employee1',\n    component: Employee1Component \n  },\n  {\n    path: 'login',\n    component: LoginComponent \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".content {\\r\\n    padding: 1rem;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsYUFBYTtJQUNiLHVCQUF1QjtFQUN6QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xyXG4gICAgcGFkZGluZzogMXJlbTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcbiAgIl19 */\"","module.exports = \"<div class=\\\"mdl-layout mdl-js-layout mdl-layout--fixed-header\\\">\\n  <div class=\\\"mdl-layout__header mdl-layout__header--waterfall\\\">\\n    <div class=\\\"mdl-layout__header-row\\\">\\n      <span class=\\\"mdl-layout-title\\\" routerLink=\\\"/\\\">\\n        GraphQL POC demonstration\\n      </span>\\n      <!-- Add spacer, to align navigation to the right in desktop -->\\n      <div class=\\\"mdl-layout-spacer\\\"></div>\\n      <!-- Navigation -->\\n        <ul class=\\\"mdl-navigation\\\">\\n         \\n        </ul>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"mdl-layout__drawer\\\">\\n    \\n  </div>\\n\\n  <div class=\\\"mdl-layout__content content\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { GraphQLModule } from './graphql.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  implements OnInit{\n\n\n  constructor(private service: GraphQLModule) {\n  }\n\n  ngOnInit(): void {\n    // this.service.getOwners();\n\n    // this.service.getOwner('514c3bc3-14df-4515-bc13-256e75dd2e9f');\n\n    // const ownerToCreate = {\n    //   name: 'new name',\n    //   address: 'new address'\n    // }\n    // this.service.createOwner(ownerToCreate);\n\n    // const ownerToUpdate = {\n    //   name: 'updated name',\n    //   address: 'updated address'\n    // }\n    // this.service.updateOwner(ownerToUpdate, 'BEABBE64-C19A-4FFE-B149-34D1F5B1BC45');\n\n    //this.service.deleteOwner('BEABBE64-C19A-4FFE-B149-34D1F5B1BC45');\n  }\n  title = 'angulargraphqlclient';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ApolloModule } from 'apollo-angular';\nimport { HttpLinkModule } from 'apollo-angular-link-http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PersonComponent } from './person/person.component';\nimport { GraphQLModule } from './graphql.service';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { Employee1Component } from './employee1/employee1.component';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PersonComponent,\n    EmployeeComponent,\n    Employee1Component,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    ApolloModule,\n    HttpLinkModule,\n    HttpClientModule,\n    AppRoutingModule,\n    GraphQLModule,    \n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2VtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<label>Employee ID : &nbsp;  &nbsp;  \\n  <input type=\\\"text\\\" id=\\\"id\\\" [(ngModel)]=\\\"id\\\">\\n  </label>\\n  <br>\\n  \\n  <br>\\n  &nbsp;  &nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp;  &nbsp;  &nbsp;&nbsp;  &nbsp;  &nbsp;  &nbsp;\\n  <button class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect\\\" Align=\\\"center\\\" (click)=\\\"update()\\\">\\n    Filter\\n  </button>\\n  \\n  <h4 align=\\\"center\\\">Employee Information</h4>\\n  <table class=\\\"mdl-data-table mdl-js-data-table mdl-shadow--2dp\\\">\\n    <tr>\\n      <th class=\\\"mdl-data-table__cell--non-numeric\\\"><b>EmpID</b></th>\\n      <th class=\\\"mdl-data-table__cell--non-numeric\\\"><b>Name</b></th>\\n      <th class=\\\"mdl-data-table__cell--non-numeric\\\">EmpCode</th>\\n      <th class=\\\"mdl-data-table__cell--non-numeric\\\">Salary</th>\\n    </tr>\\n    <tr>      \\n      <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{employees.EmpID}}</td>\\n      <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{employees.Name}}</td>\\n      <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{employees.EmpCode}}</td>   \\n      <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{employees.Salary}}</td>\\n    </tr>\\n  </table>\"","import { Component, OnInit } from '@angular/core';\nimport {Apollo, QueryRef} from 'apollo-angular';\nimport gql from 'graphql-tag';\n\nconst EMPLOEE_QUERY = gql`\n  query getEmployee($id:Int!) {\n    getEmployee(id: $id) {\n      EmpID\n      Name\n      EmpCode\n      Salary    \n  }\n}\n`;\n\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n  id:number = 1;\n  page = 0;\n  employees: any[] = []; \n\n  private query: QueryRef<any>;\n  constructor(private apollo: Apollo) { }\n\n   ngOnInit() {\n    this.query = this.apollo\n      .watchQuery({\n        query: EMPLOEE_QUERY,\n        variables: {id : Math.round(this.id)}\n      });\n    \n      this.query.valueChanges.subscribe(result => {   \n      this.employees = result.data.getEmployee;      \n      });\n  }\n\n  update() {\n    return this.query.refetch({id: Math.round(this.id)});\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlMS9lbXBsb3llZTEuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<label>Employee ID : &nbsp;  &nbsp;  \\n  <input type=\\\"text\\\" id=\\\"id\\\" [(ngModel)]=\\\"id\\\">\\n  </label>\\n  <br>\\n  \\n  <br>\\n  &nbsp;  &nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp;  &nbsp;  &nbsp;&nbsp;  &nbsp;  &nbsp;  &nbsp;\\n  <button class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect\\\" Align=\\\"center\\\" (click)=\\\"update()\\\">\\n    Filter\\n  </button>\\n  \\n  <h4 align=\\\"center\\\">Employee Information</h4>\\n  <table class=\\\"mdl-data-table mdl-js-data-table mdl-shadow--2dp\\\">\\n    <tr>\\n      <th class=\\\"mdl-data-table__cell--non-numeric\\\"><b>EmpID</b></th>\\n      <th></th>\\n      <th class=\\\"mdl-data-table__cell--non-numeric\\\"><b>Name</b></th>\\n      <th></th>\\n    </tr>\\n    <tr>      \\n      <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{employees1.id}}</td>\\n      <td></td>\\n      <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{employees1.emp_name}}</td>   \\n      <td></td>\\n    </tr>\\n  </table>\"","import { Component, OnInit } from '@angular/core';\nimport {Apollo, QueryRef} from 'apollo-angular';\nimport gql from 'graphql-tag';\n\nconst EMPLOEE1_QUERY = gql`\n  query getEmp($id:Int!) {\n    getEmp(id: $id) {\n      id\n      emp_name   \n  }\n}\n`;\n\n\n@Component({\n  selector: 'app-employee1',\n  templateUrl: './employee1.component.html',\n  styleUrls: ['./employee1.component.css']\n})\n\nexport class Employee1Component implements OnInit {\n  id:number = 123;\n  page = 0;\n  employees1: any[] = []; \n\n  private query: QueryRef<any>;\n  constructor(private apollo: Apollo) { }\n\n   ngOnInit() {\n    this.query = this.apollo\n      .watchQuery({\n        query: EMPLOEE1_QUERY,\n        variables: {id : Math.round(this.id)}\n      });\n    \n      this.query.valueChanges.subscribe(result => {   \n      this.employees1 = result.data.getEmp;      \n      });\n  }\n\n  update() {\n    return this.query.refetch({id: Math.round(this.id)});\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {ApolloModule, APOLLO_OPTIONS} from 'apollo-angular';\nimport {HttpLinkModule, HttpLink} from 'apollo-angular-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\n\nexport function createApollo(httpLink: HttpLink) {\n    return {\n    link: httpLink.create({ uri: 'http://gpl-api-load-balancer-1082457367.us-east-1.elb.amazonaws.com/graphQL/Demo' }),\n    cache: new InMemoryCache(),\n  };\n}\n\n//http://localhost:2020/graphQL/Demo\n//http://gpl-api-load-balancer-1082457367.us-east-1.elb.amazonaws.com/graphQL/Demo\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<label><b>Employee Login Form : </b>&nbsp;  &nbsp;\\n  <br>\\n  <br>  \\n<label><b>ID : </b>&nbsp;  &nbsp;\\n  <input type=\\\"text\\\" id=\\\"id\\\" [(ngModel)]=\\\"id\\\">\\n  </label>\\n  <br>\\n\\n  <label><b>Key : </b>&nbsp;  &nbsp;\\n    <input type=\\\"text\\\" id=\\\"key\\\" [(ngModel)]=\\\"key\\\">\\n    </label>\\n    <br>\\n\\n  <br>\\n    &nbsp;  &nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp;  &nbsp;  &nbsp;&nbsp;  &nbsp;  &nbsp;  &nbsp;\\n    \\n  <button class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect\\\"\\n   Align=\\\"center\\\" (click)=\\\"submit()\\\">\\n    Submit\\n  </button>  \\n \"","import { Component, OnInit } from '@angular/core';\nimport {Apollo, QueryRef} from 'apollo-angular';\nimport gql from 'graphql-tag';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators'; \n\nconst PERSON_QUERY = gql`\n  query login($id:String!,$key:String!) {\n    login(id: $id,key: $key) {\n      token   \n  }\n}\n`;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  id =\"1\";\n  key=\"1\";\n  page = 0;\n  persons: any[] = [];\n  idValue=1;\n\n  private query: QueryRef<any>;\n\n  constructor(private apollo: Apollo,private http: HttpClient) { }\n\n \n\n  ngOnInit() {\n    this.query = this.apollo\n      .watchQuery({\n        query: PERSON_QUERY,\n        variables: {id : this.id,key : this.key}\n      });\n      \n      this.query.valueChanges.subscribe(result => {   \n      this.persons = result.data.getPerson;\n     // this.idValue=this.id;\n      });\n  }\n\n  submit() {     \n    debugger;\n    console.log(\"===22222=============\");\n   // const url = `${this.heroesUrl}/${id}`; \n        return this.http.post<any>(`http://localhost:3000/gql`, {id:this.id,key:this.key})\n            .pipe(map(user => {\n        console.log(\"================\"+user);\n        console.log(\"================\"+user.token);\n                // login successful if there's a jwt token in the response\n                if (user && user.token) {\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\n                    localStorage.setItem('currentUser', JSON.stringify(user));\n                }\n\n                return user;\n            }));\n\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbi9wZXJzb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<label><b>Person ID : </b>&nbsp;  &nbsp;\\n<input type=\\\"text\\\" id=\\\"id\\\" [(ngModel)]=\\\"id\\\">\\n</label>\\n<br>\\n<br>\\n  &nbsp;  &nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp;  &nbsp;  &nbsp; &nbsp;  &nbsp;  &nbsp;  &nbsp;&nbsp;  &nbsp;  &nbsp;  &nbsp;\\n  \\n<button class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect\\\" Align=\\\"center\\\" (click)=\\\"update()\\\">\\n  Filter\\n</button>\\n\\n<h4 align=\\\"center\\\"><b>Person Information</b></h4>\\n<table class=\\\"mdl-data-table mdl-js-data-table mdl-shadow--2dp\\\">\\n  <tr>\\n    <th class=\\\"mdl-data-table__cell--non-numeric\\\"><b>ID</b></th>\\n    <th class=\\\"mdl-data-table__cell--non-numeric\\\"><b>Name</b></th>\\n    <th class=\\\"mdl-data-table__cell--non-numeric\\\">Age</th>\\n    <th class=\\\"mdl-data-table__cell--non-numeric\\\">Hair Color</th>    \\n    <th class=\\\"mdl-data-table__cell--non-numeric\\\">Gender</th>\\n  </tr>\\n  <tr>\\n    <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{idValue}}</td>\\n    <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{persons.name}}</td>\\n    <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{persons.mass}}</td>\\n    <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{persons.hair_color}}</td>   \\n    <td class=\\\"mdl-data-table__cell--non-numeric\\\">{{persons.gender}}</td>\\n  </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport {Apollo, QueryRef} from 'apollo-angular';\nimport gql from 'graphql-tag';\n\n\nconst PERSON_QUERY = gql`\n  query getPerson($id:Int!) {\n      getPerson(id: $id) {\n      name\n      mass\n      hair_color\n      gender    \n  }\n}\n`;\n\n\n@Component({\n  selector: 'app-person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.css']\n})\nexport class PersonComponent implements OnInit {\n  id:number = 1;\n  page = 0;\n  persons: any[] = [];\n  idValue=1;\n\n  private query: QueryRef<any>;\n  constructor(private apollo: Apollo) { }\n\n \n\n  ngOnInit() {\n    this.query = this.apollo\n      .watchQuery({\n        query: PERSON_QUERY,\n        variables: {id : Math.round(this.id)}\n      });\n      \n      this.query.valueChanges.subscribe(result => {   \n      this.persons = result.data.getPerson;\n      this.idValue=this.id;\n      });\n  }\n\n  update() {\n    return this.query.refetch({id: Math.round(this.id)});\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}